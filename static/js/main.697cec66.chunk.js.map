{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/ProfileStat/ProfileStat.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/ProfileStat/ProfileStat.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ProfileStat","label","quantity","className","styles","Profile","name","tag","location","avatar","stats","profile","description","src","alt","Object","keys","map","key","statsItem","Statistics","title","colors","statistics","statList","index","id","percentage","item","style","backgroundColor","defaultProps","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","TransactionHistory","transactions","type","amount","currency","App","userProfileData","statisticalData","friendsData","transactionsData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.697cec66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3J4Cg\",\"description\":\"Profile_description__1cCCJ\",\"avatar\":\"Profile_avatar__1fYtY\",\"name\":\"Profile_name__2yGVF\",\"tag\":\"Profile_tag__3pvm1\",\"location\":\"Profile_location__16W76\",\"stats\":\"Profile_stats__50Mhp\",\"statsItem\":\"Profile_statsItem__1nSkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3yIDZ\",\"title\":\"Statistics_title__hx6bo\",\"statList\":\"Statistics_statList__3nPoj\",\"item\":\"Statistics_item__GpKxT\",\"label\":\"Statistics_label__2qyVr\",\"percentage\":\"Statistics_percentage__9udF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3GT1M\",\"status\":\"FriendListItem_status__2vqpR\",\"online\":\"FriendListItem_online__3TFlK FriendListItem_status__2vqpR\",\"offline\":\"FriendListItem_offline__1M6QI FriendListItem_status__2vqpR\",\"avatar\":\"FriendListItem_avatar__3rlnu\",\"name\":\"FriendListItem_name__1hluv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ProfileStat_label__2FAmX\",\"quantity\":\"ProfileStat_quantity__p4Yg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__NjN1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__3gqyo\"};","import PropTypes from 'prop-types';\n\nimport styles from './ProfileStat.module.css';\n\nexport default function ProfileStat({ label, quantity }) {\n\treturn (\n\t\t<>\n\t\t\t<span className={styles.label}>{label}</span>\n\t\t\t<span className={styles.quantity}>{quantity}</span>\n\t\t</>\n\t);\n}\n\nProfileStat.propTypes = {\n\tlabel: PropTypes.string.isRequired,\n\tquantity: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ProfileStat from '../ProfileStat/ProfileStat';\n\nimport styles from './Profile.module.css';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.profile}>\n\t\t\t\t<div className={styles.description}>\n\t\t\t\t\t<img src={avatar} alt={name} className={styles.avatar} />\n\t\t\t\t\t<p className={styles.name}>{name}</p>\n\t\t\t\t\t<p className={styles.tag}>@{tag}</p>\n\t\t\t\t\t<p className={styles.location}>{location}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<ul className={styles.stats}>\n\t\t\t\t\t{Object.keys(stats).map(key => (\n\t\t\t\t\t\t<li key={key} className={styles.statsItem}>\n\t\t\t\t\t\t\t<ProfileStat label={key} quantity={stats[key]} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nProfile.propTypes = {\n\tname: PropTypes.string.isRequired,\n\ttag: PropTypes.string.isRequired,\n\tlocation: PropTypes.string.isRequired,\n\tavatar: PropTypes.string.isRequired,\n\tstats: PropTypes.object.isRequired,\n};\n","import styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n\tconst colors = ['#c62828', '#1e88e5', '#f9a825', '#388e3c', '#ff5722'];\n\treturn (\n\t\t<section className={styles.statistics}>\n\t\t\t{title ? <h2 className={styles.title}>{title}</h2> : ''}\n\n\t\t\t<ul className={styles.statList}>\n\t\t\t\t{stats.map(({ id, label, percentage }, index) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tclassName={styles.item}\n\t\t\t\t\t\tstyle={{ backgroundColor: colors[index] }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className={styles.label}>{label}</span>\n\t\t\t\t\t\t<span className={styles.percentage}>{percentage}</span>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n\nStatistics.defaultProps = {\n\ttitle: '',\n\tstats: [],\n};\n\nStatistics.propTypes = {\n\ttitle: PropTypes.string,\n\tstats: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tpercentage: PropTypes.number.isRequired,\n\t\t}),\n\t),\n};\n","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n\treturn (\n\t\t<li className={styles.item}>\n\t\t\t<span className={isOnline ? styles.online : styles.offline} />\n\t\t\t<img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n\t\t\t<p className={styles.name}>{name}</p>\n\t\t</li>\n\t);\n}\n\nFriendListItem.propTypes = {\n\tavatar: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tisOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nimport styles from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n\treturn (\n\t\t<ul className={styles.friendList}>\n\t\t\t{friends.map(({ id, avatar, name, isOnline }) => (\n\t\t\t\t<FriendListItem\n\t\t\t\t\tkey={id}\n\t\t\t\t\tisOnline={isOnline}\n\t\t\t\t\tavatar={avatar}\n\t\t\t\t\tname={name}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nFriendList.defaultProps = {\n\tfriends: [],\n};\n\nFriendList.propTypes = {\n\tfriends: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ transactions }) {\n\treturn (\n\t\t<table className={styles['transaction-history']}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t<th>Amount</th>\n\t\t\t\t\t<th>Currency</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t{transactions.map(({ id, type, amount, currency }) => (\n\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t<td>{type}</td>\n\t\t\t\t\t\t<td>{amount}</td>\n\t\t\t\t\t\t<td>{currency}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nTransactionHistory.defaultProps = {\n\ttransactions: [],\n};\n\nTransactionHistory.propTypes = {\n\ttransactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\ttype: PropTypes.string.isRequired,\n\t\t\tamount: PropTypes.string.isRequired,\n\t\t\tcurrency: PropTypes.string.isRequired,\n\t\t}),\n\t),\n};\n","import 'modern-normalize/modern-normalize.css';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport userProfileData from './assets/json/user.json';\nimport statisticalData from './assets/json/statistical-data.json';\nimport friendsData from './assets/json/friends.json';\nimport transactionsData from './assets/json/transactions.json';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Profile\n\t\t\t\tname={userProfileData.name}\n\t\t\t\ttag={userProfileData.tag}\n\t\t\t\tlocation={userProfileData.location}\n\t\t\t\tavatar={userProfileData.avatar}\n\t\t\t\tstats={userProfileData.stats}\n\t\t\t/>\n\t\t\t<Statistics title=\"Upload stats\" stats={statisticalData} />\n\t\t\t<Statistics stats={statisticalData} />\n\t\t\t<FriendList friends={friendsData} />\n\t\t\t<TransactionHistory transactions={transactionsData} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}